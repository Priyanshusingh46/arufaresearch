import { ActionType, ConfigExtender, ConfigurableTaskDefinition, EnvironmentExtender, TaskArguments } from "../../../types";
import * as argumentTypes from "../params/argument-types";
export declare function task<ArgsT extends TaskArguments>(name: string, description?: string, action?: ActionType<ArgsT>): ConfigurableTaskDefinition;
export declare function task<ArgsT extends TaskArguments>(name: string, action: ActionType<ArgsT>): ConfigurableTaskDefinition;
export declare function internalTask<ArgsT extends TaskArguments>(name: string, description?: string, action?: ActionType<ArgsT>): ConfigurableTaskDefinition;
export declare function internalTask<ArgsT extends TaskArguments>(name: string, action: ActionType<ArgsT>): ConfigurableTaskDefinition;
export declare const types: typeof argumentTypes;
/**
 * Register an environment extender what will be run after the
 * polar Runtime Environment is initialized.
 *
 * @param extender A function that receives the polar Runtime
 * Environment.
 */
export declare function extendEnvironment(extender: EnvironmentExtender): void;
export declare function extendConfig(extender: ConfigExtender): void;
/**
 * Loads a polar plugin
 * @param pluginName The plugin name.
 */
export declare function usePlugin(pluginName: string): void;
