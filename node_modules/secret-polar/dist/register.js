"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const debug_1 = __importDefault(require("debug"));
const context_1 = require("./internal/context");
const config_loading_1 = require("./internal/core/config/config-loading");
const env_variables_1 = require("./internal/core/params/env-variables");
const polar_params_1 = require("./internal/core/params/polar-params");
const runtime_env_1 = require("./internal/core/runtime-env");
const console_1 = require("./internal/util/console");
async function registerEnv() {
    if (!context_1.PolarContext.isCreated()) {
        return;
    }
    require("source-map-support/register");
    const ctx = context_1.PolarContext.createPolarContext();
    if ((0, console_1.isNodeCalledWithoutAScript)()) {
        (0, console_1.disableReplWriterShowProxy)();
    }
    const runtimeArgs = (0, env_variables_1.getEnvRuntimeArgs)(polar_params_1.POLAR_PARAM_DEFINITIONS, process.env);
    if (runtimeArgs.verbose) {
        debug_1.default.enable("polar*");
    }
    const config = await (0, config_loading_1.loadConfigAndTasks)(runtimeArgs);
    if (!runtimeArgs.network) {
        runtimeArgs.network = "default";
    }
    const env = new runtime_env_1.Environment(config, runtimeArgs, ctx.tasksDSL.getTaskDefinitions(), ctx.extendersManager.getExtenders(), false);
    ctx.setRuntimeEnv(env);
    env.injectToGlobal();
}
registerEnv().catch((err) => console.error(err));
